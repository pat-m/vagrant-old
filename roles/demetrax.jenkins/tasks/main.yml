# Setup/install tasks.
- include_tasks: Jenkins.yml

# Configure Jenkins init settings.
- include_tasks: settings.yml



# Make sure Jenkins starts, then configure Jenkins.
- name: Ensure Jenkins is started and runs on startup.
  service: name=jenkins state=started enabled=yes

- name: Wait for Jenkins to start up before proceeding.
  uri:
    url: "http://localhost:8080/cli/"
    method: GET
    return_content: "yes"
    timeout: 5
    body_format: raw
    follow_redirects: "no"
    status_code: 200,403
  register: result
  until: (result.status == 403 or result.status == 200) and (result.content.find("Please wait while") == -1)
  retries: 60
  delay: 1
  changed_when: false
  check_mode: false

- name: Get the jenkins-cli jarfile from the Jenkins server.
  get_url:
    url: "http://localhost:8080/jnlpJars/jenkins-cli.jar"
    dest: "/opt/jenkins-cli.jar"
  register: jarfile_get
  until: "'OK' in jarfile_get.msg or '304' in jarfile_get.msg or 'file already exists' in jarfile_get.msg"
  retries: 5
  delay: 10
  check_mode: false

- name: Disable Jenkins setup wizard
  lineinfile:
    dest=/etc/default/jenkins
    regexp=^JAVA_ARGS=
    line=JAVA_ARGS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"
  become: true

- name: Create initialization scripts directory
  file: path=/var/lib/jenkins/init.groovy.d
    state=directory
    owner=jenkins
    group=jenkins
    mode=0775

- name: Add initialization script to setup basic security
  template: src=security.groovy.j2
    dest=/var/lib/jenkins/init.groovy.d/security.groovy

- name: Restart jenkins
  service: name=jenkins state=restarted

#- name: Get init password Jenkins
#  shell: cat /var/lib/jenkins/secrets/initialAdminPassword
#  changed_when: false
#  register: result
#  become: true
#
#- name: Print init password Jenkins
#  debug:
#    var: result.stdout
#  become: true

# Configure Jenkins plugins.
- include_tasks: plugins.yml