- name: Check if jenkins_init_file exists.
  stat:
    path: "/etc/default/jenkins"
  register: jenkins_init_file_stat

- name: Ensure jenkins_init_file exists.
  file:
    path: "/etc/default/jenkins"
    state: touch
    mode: 0644
  when: not jenkins_init_file_stat.stat.exists

# - name: Modify variables in init file.
#  lineinfile:
#    dest: "/etc/default/jenkins"
#    insertafter: '^{{ item.option }}='
#    regexp: '^{{ item.option }}=\"\${{ item.option }} '
#    line: '{{ item.option }}="${{ item.option }} {{ item.value }}"'
#    state: present
#    mode: 0644
#  with_items: "{{ jenkins_init_changes }}"
#  register: jenkins_init_prefix

- name: Ensure jenkins_home /var/lib/jenkins exists.
  file:
    path: "/var/lib/jenkins"
    state: directory
    owner: jenkins
    group: jenkins
    mode: u+rwx
    follow: true

- name: Set the Jenkins home directory.
  lineinfile:
    dest: "/etc/default/jenkins"
    regexp: '^JENKINS_HOME=.*'
    line: 'JENKINS_HOME=/var/lib/jenkins'
    mode: 0644
  register: jenkins_home_config

- name: Ensure correct ownership of JENKINS_HOME directory
  file:
    path: "/data/jenkins"
    owner: "jenkins"
    group: "jenkins"
    mode: 0755
    state: directory
  become: true

- name: Ensure main configuration file is up to date
  template:
    src: "{{ playbook_dir }}/jenkins-configs/config.xml"
    dest: "/data/jenkins/config.xml"
    owner: "jenkins"
    group: "jenkins"
    mode: 0644
  become: true

- name: Configure Jenkins location
  template:
    src: files/jenkins.model.JenkinsLocationConfiguration.xml.j2
    dest: "/data/jenkins/jenkins.model.JenkinsLocationConfiguration.xml"
    owner: "jenkins"
    group: "jenkins"
    mode: 0644
  become: true

- name: add Jenkins as sudo
  become: true
  shell: usermod -a -G sudo jenkins

- name: add Jenkins with no password
  become: true
  template:
    src: "jenkins.user.j2"
    dest: "/etc/sudoers.d/jenkins"

- name: Job directories are present
  file:
    path: "/data/jenkins/jobs/{{ item }}"
    state: directory
    mode: 0777
    owner: "jenkins"
    group: "jenkins"
  with_items: "{{ jenkins_jobs }}"

- name: Jobs are present
  copy:
    src: "{{ playbook_dir }}/jenkins-configs/jobs/{{ item }}/config.xml"
    dest: "/data/jenkins/jobs/{{ item }}/config.xml"
    mode: 0777
    owner: "jenkins"
    group: "jenkins"
  with_items: "{{ jenkins_jobs }}"

- name: Immediately restart Jenkins on init config changes.
  service: name=jenkins state=restarted
  tags: ['skip_ansible_lint']

- name: Trigger handlers immediately in case Jenkins was installed
  meta: flush_handlers

- name: Immediately restart Jenkins on http or user changes.
  service: name=jenkins state=restarted
  when: >
    (jenkins_users_config is defined and jenkins_users_config.changed)
    or (jenkins_http_config is defined and jenkins_http_config.changed)
    or (jenkins_home_config is defined and jenkins_home_config.changed)
    or (jenkins_proxy_config is defined and jenkins_proxy_config.changed)
  tags: ['skip_ansible_lint']